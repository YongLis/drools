<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sh.drools.dal.mapper.MemberMapper">
  <resultMap id="BaseResultMap" type="com.sh.drools.dal.model.Member">
    <id column="ID" jdbcType="INTEGER" property="id" />
    <result column="PASSWORD" jdbcType="VARCHAR" property="password" />
    <result column="USER_NAME" jdbcType="VARCHAR" property="userName" />
    <result column="STATUS" jdbcType="INTEGER" property="status" />
    <result column="EMAIL" jdbcType="VARCHAR" property="email" />
    <result column="AVATAR" jdbcType="VARCHAR" property="avatar" />
    <result column="GENDER" jdbcType="VARCHAR" property="gender" />
    <result column="HIREDATE" jdbcType="TIMESTAMP" property="hiredate" />
    <result column="REAL_NAME" jdbcType="VARCHAR" property="realName" />
    <result column="TELEPHONE" jdbcType="VARCHAR" property="telephone" />
    <result column="value1" jdbcType="VARCHAR" property="value1" />
    <result column="value2" jdbcType="VARCHAR" property="value2" />
    <collection property="roles" select="selectMemberRoleList" column="ID" />
  </resultMap>
  <sql id="Base_Column_List">
    ID, PASSWORD, USER_NAME, STATUS, EMAIL, AVATAR, GENDER, HIREDATE, REAL_NAME, TELEPHONE, 
    value1, value2
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from crm_member
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <select id="findByUserName" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from crm_member
    where USER_NAME = #{userName,jdbcType=VARCHAR}
  </select>

  <select id="selectMemberRoleList" parameterType="java.lang.Integer" resultType="com.sh.drools.dal.model.Role">
   SELECT * FROM crm_role
    WHERE
        ID IN (
            SELECT
                ROLE_ID
            FROM
                crm_member_role
            WHERE
                MEMBER_ID = #{memberId,jdbcType=INTEGER}
            AND `STATUS` = 1
        )
  </select>

    <select id="selectByCondition" parameterType="com.sh.drools.dal.model.Member" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from crm_member
        where 1=1
        <if test="password != null">
           AND PASSWORD = #{password,jdbcType=VARCHAR},
        </if>
        <if test="userName != null">
            AND USER_NAME = #{userName,jdbcType=VARCHAR},
        </if>
        <if test="status != null">
            AND STATUS = #{status,jdbcType=INTEGER},
        </if>
        <if test="email != null">
            AND  EMAIL = #{email,jdbcType=VARCHAR},
        </if>
        <if test="avatar != null">
            AND  AVATAR = #{avatar,jdbcType=VARCHAR},
        </if>
        <if test="gender != null">
            AND  GENDER = #{gender,jdbcType=VARCHAR},
        </if>
        <if test="hiredate != null">
            AND  HIREDATE = #{hiredate,jdbcType=TIMESTAMP},
        </if>
        <if test="realName != null">
            AND  REAL_NAME = #{realName,jdbcType=VARCHAR},
        </if>
        <if test="telephone != null">
            AND TELEPHONE = #{telephone,jdbcType=VARCHAR},
        </if>
        <if test="value1 != null">
            AND value1 = #{value1,jdbcType=VARCHAR},
        </if>
        <if test="value2 != null">
            AND  value2 = #{value2,jdbcType=VARCHAR},
        </if>
    </select>

  <select id="countByUserName" parameterType="java.lang.String" resultType="java.lang.Integer">
    select
    count(*)
    from crm_member
    where USER_NAME = #{userName,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from crm_member
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.sh.drools.dal.model.Member">
    insert into crm_member (ID, PASSWORD, USER_NAME, 
      STATUS, EMAIL, AVATAR, 
      GENDER, HIREDATE, REAL_NAME, 
      TELEPHONE, value1, value2
      )
    values (#{id,jdbcType=INTEGER}, #{password,jdbcType=VARCHAR}, #{userName,jdbcType=VARCHAR}, 
      #{status,jdbcType=INTEGER}, #{email,jdbcType=VARCHAR}, #{avatar,jdbcType=VARCHAR}, 
      #{gender,jdbcType=VARCHAR}, #{hiredate,jdbcType=TIMESTAMP}, #{realName,jdbcType=VARCHAR}, 
      #{telephone,jdbcType=VARCHAR}, #{value1,jdbcType=VARCHAR}, #{value2,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.sh.drools.dal.model.Member">
    insert into crm_member
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        ID,
      </if>
      <if test="password != null">
        PASSWORD,
      </if>
      <if test="userName != null">
        USER_NAME,
      </if>
      <if test="status != null">
        STATUS,
      </if>
      <if test="email != null">
        EMAIL,
      </if>
      <if test="avatar != null">
        AVATAR,
      </if>
      <if test="gender != null">
        GENDER,
      </if>
      <if test="hiredate != null">
        HIREDATE,
      </if>
      <if test="realName != null">
        REAL_NAME,
      </if>
      <if test="telephone != null">
        TELEPHONE,
      </if>
      <if test="value1 != null">
        value1,
      </if>
      <if test="value2 != null">
        value2,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="avatar != null">
        #{avatar,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        #{gender,jdbcType=VARCHAR},
      </if>
      <if test="hiredate != null">
        #{hiredate,jdbcType=TIMESTAMP},
      </if>
      <if test="realName != null">
        #{realName,jdbcType=VARCHAR},
      </if>
      <if test="telephone != null">
        #{telephone,jdbcType=VARCHAR},
      </if>
      <if test="value1 != null">
        #{value1,jdbcType=VARCHAR},
      </if>
      <if test="value2 != null">
        #{value2,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.sh.drools.dal.model.Member">
    update crm_member
    <set>
      <if test="password != null">
        PASSWORD = #{password,jdbcType=VARCHAR},
      </if>
      <if test="userName != null">
        USER_NAME = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        STATUS = #{status,jdbcType=INTEGER},
      </if>
      <if test="email != null">
        EMAIL = #{email,jdbcType=VARCHAR},
      </if>
      <if test="avatar != null">
        AVATAR = #{avatar,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        GENDER = #{gender,jdbcType=VARCHAR},
      </if>
      <if test="hiredate != null">
        HIREDATE = #{hiredate,jdbcType=TIMESTAMP},
      </if>
      <if test="realName != null">
        REAL_NAME = #{realName,jdbcType=VARCHAR},
      </if>
      <if test="telephone != null">
        TELEPHONE = #{telephone,jdbcType=VARCHAR},
      </if>
      <if test="value1 != null">
        value1 = #{value1,jdbcType=VARCHAR},
      </if>
      <if test="value2 != null">
        value2 = #{value2,jdbcType=VARCHAR},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sh.drools.dal.model.Member">
    update crm_member
    set PASSWORD = #{password,jdbcType=VARCHAR},
      USER_NAME = #{userName,jdbcType=VARCHAR},
      STATUS = #{status,jdbcType=INTEGER},
      EMAIL = #{email,jdbcType=VARCHAR},
      AVATAR = #{avatar,jdbcType=VARCHAR},
      GENDER = #{gender,jdbcType=VARCHAR},
      HIREDATE = #{hiredate,jdbcType=TIMESTAMP},
      REAL_NAME = #{realName,jdbcType=VARCHAR},
      TELEPHONE = #{telephone,jdbcType=VARCHAR},
      value1 = #{value1,jdbcType=VARCHAR},
      value2 = #{value2,jdbcType=VARCHAR}
    where ID = #{id,jdbcType=INTEGER}
  </update>
</mapper>